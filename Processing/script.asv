%% Generating mat files from lvm files
% lvm2mat;

%% Loading mat files
inputFolder = '../Labeled Data/';
listing = dir([inputFolder, '*.mat']);
for i = 1 : length(listing)
    fileName = listing(i).name;
    S(i) = load([inputFolder, fileName]);
end

%% Selecting training data
numClasses = 3;
i(1) = 2; % jingyi-walk 
i(2) = 3; % run-jingyu 
i(3) = 1; % car
numObsv = 20;

index = zeros(numObsv, numClasses);
C = []; Y = [];
for j = 1 : numClasses
    index(:, j) = ceil(rand(numObsv, 1) * length(S(i(j)).C));
    C = [C; S(i(j)).C(index(:, j))];
    Y = [Y; S(i(j)).Y(index(:, j))];
end
%%
for j = 41 : 60
    plot(cell2mat(C(j))');
    title(strjoin([num2str(j), ' ', string(Y(j))]));
    pause;
end

%% Training
inputSize = 5; 
outputSize = 60;
outputMode = 'last';

layers = [ ...
    sequenceInputLayer(inputSize)
    lstmLayer(outputSize,'OutputMode',outputMode)
    fullyConnectedLayer(numClasses)
    softmaxLayer
    classificationLayer];

maxEpochs = 100;
miniBatchSize = 5;
shuffle = 'once';

options = trainingOptions('sgdm', ...
    'MaxEpochs',maxEpochs, ...
    'MiniBatchSize',miniBatchSize, ...
    'Shuffle', shuffle);

net = trainNetwork(C,Y,layers,options);

%% Classifying
j = 4;
disp(' ');
XTest = S(j).C;
YPred = classify(net,XTest, ...
    'MiniBatchSize', miniBatchSize);
disp('Prediction:');
summary(YPred);
disp('Reality:');
summary(S(j).Y);
%%
for j = 1 : length(XTest)
    plot(cell2mat(XTest(j))');
    title(strjoin([num2str(j), ' ', string(YPred(j))]));
    pause;
end